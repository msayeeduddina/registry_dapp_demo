{"version":3,"file":"component---cache-dev-404-page-js.js","mappings":"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","sources":["webpack://did-registry-demo-dapp/./node_modules/decode-uri-component/index.js","webpack://did-registry-demo-dapp/./node_modules/filter-obj/index.js","webpack://did-registry-demo-dapp/./.cache/dev-404-page.js","webpack://did-registry-demo-dapp/./node_modules/query-string/index.js","webpack://did-registry-demo-dapp/./node_modules/split-on-first/index.js","webpack://did-registry-demo-dapp/./node_modules/strict-uri-encode/index.js"],"sourcesContent":["'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql, Link, navigate } from \"gatsby\"\nimport queryString from \"query-string\"\n\nclass Dev404Page extends React.Component {\n  static propTypes = {\n    data: PropTypes.object,\n    custom404: PropTypes.element,\n    location: PropTypes.object,\n  }\n\n  constructor(props) {\n    super(props)\n    const { data, location } = this.props\n    const pagePaths = data.allSitePage.nodes.map(node => node.path)\n    const urlState = queryString.parse(location.search)\n\n    const initialPagePathSearchTerms = urlState.filter ? urlState.filter : ``\n\n    this.state = {\n      hasMounted: false,\n      showCustom404: process.env.GATSBY_DISABLE_CUSTOM_404 || false,\n      initPagePaths: pagePaths,\n      pagePathSearchTerms: initialPagePathSearchTerms,\n      pagePaths: this.getFilteredPagePaths(\n        pagePaths,\n        initialPagePathSearchTerms\n      ),\n    }\n    this.showCustom404 = this.showCustom404.bind(this)\n    this.handlePagePathSearch = this.handlePagePathSearch.bind(this)\n    this.handleSearchTermChange = this.handleSearchTermChange.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({\n      hasMounted: true,\n    })\n  }\n\n  showCustom404() {\n    this.setState({ showCustom404: true })\n  }\n\n  handleSearchTermChange(event) {\n    const searchValue = event.target.value\n\n    this.setSearchUrl(searchValue)\n\n    this.setState({\n      pagePathSearchTerms: searchValue,\n    })\n  }\n\n  handlePagePathSearch(event) {\n    event.preventDefault()\n    const allPagePaths = [...this.state.initPagePaths]\n    this.setState({\n      pagePaths: this.getFilteredPagePaths(\n        allPagePaths,\n        this.state.pagePathSearchTerms\n      ),\n    })\n  }\n\n  getFilteredPagePaths(allPagePaths, pagePathSearchTerms) {\n    const searchTerm = new RegExp(`${pagePathSearchTerms}`)\n    return allPagePaths.filter(pagePath => searchTerm.test(pagePath))\n  }\n\n  setSearchUrl(searchValue) {\n    const {\n      location: { pathname, search },\n    } = this.props\n\n    const searchMap = queryString.parse(search)\n    searchMap.filter = searchValue\n\n    const newSearch = queryString.stringify(searchMap)\n\n    if (search !== `?${newSearch}`) {\n      navigate(`${pathname}?${newSearch}`, { replace: true })\n    }\n  }\n\n  render() {\n    if (!this.state.hasMounted) {\n      return null\n    }\n\n    const { pathname } = this.props.location\n    let newFilePath\n    let newAPIPath\n    if (pathname === `/`) {\n      newFilePath = `src/pages/index.js`\n    } else if (pathname.slice(0, 4) === `/api`) {\n      newAPIPath = `src${pathname}.js`\n    } else if (pathname.slice(-1) === `/`) {\n      newFilePath = `src/pages${pathname.slice(0, -1)}.js`\n    } else {\n      newFilePath = `src/pages${pathname}.js`\n    }\n\n    return this.state.showCustom404 ? (\n      this.props.custom404\n    ) : (\n      <div>\n        <h1>Gatsby.js development 404 page</h1>\n        <p>\n          There's not a page or function yet at{` `}\n          <code>{pathname}</code>\n        </p>\n        {this.props.custom404 ? (\n          <p>\n            <button onClick={this.showCustom404}>\n              Preview custom 404 page\n            </button>\n          </p>\n        ) : (\n          <p>\n            {`A custom 404 page wasn't detected - if you would like to add one, create a component in your site directory at `}\n            <code>src/pages/404.js</code>.\n          </p>\n        )}\n        {newFilePath && (\n          <div>\n            <h2>Create a page at this url</h2>\n            <p>\n              Create a React.js component like the following in your site\n              directory at\n              {` `}\"<code>{newFilePath}</code>\"{` `}\n              and then refresh to show the new page component you created.\n            </p>\n            <pre\n              style={{\n                border: `1px solid lightgray`,\n                padding: `8px`,\n                maxWidth: `80ch`,\n                background: `#f3f3f3`,\n              }}\n            >\n              <code\n                dangerouslySetInnerHTML={{\n                  __html: `import * as React from \"react\"\n\nexport default function Component () {\n  return \"Hello world\"\n}`,\n                }}\n              />\n            </pre>\n          </div>\n        )}\n        {newAPIPath && (\n          <div>\n            <h2>Create an API function at this url</h2>\n            <p>\n              Create a javascript file like the following in your site directory\n              at\n              {` `}\"<code>{newAPIPath}</code>\"{` `}\n              and refresh to execute the new API function you created.\n            </p>\n            <pre\n              style={{\n                border: `1px solid lightgray`,\n                padding: `8px`,\n                maxWidth: `80ch`,\n                background: `#f3f3f3`,\n              }}\n            >\n              <code\n                dangerouslySetInnerHTML={{\n                  __html: `\nexport default function API (req, res) {\n  res.json({ hello: \"world\" })\n}`,\n                }}\n              />\n            </pre>\n          </div>\n        )}\n        {this.state.initPagePaths.length > 0 && (\n          <div>\n            <hr />\n            <p>\n              If you were trying to reach another page or function, perhaps you\n              can find it below.\n            </p>\n            <h2>Functions ({this.props.data.allSiteFunction.nodes.length})</h2>\n            <ul>\n              {this.props.data.allSiteFunction.nodes.map(node => {\n                const functionRoute = `/api/${node.functionRoute}`\n                return (\n                  <li key={functionRoute}>\n                    <a href={functionRoute}>{functionRoute}</a>\n                  </li>\n                )\n              })}\n            </ul>\n            <h2>\n              Pages (\n              {this.state.pagePaths.length != this.state.initPagePaths.length\n                ? `${this.state.pagePaths.length}/${this.state.initPagePaths.length}`\n                : this.state.initPagePaths.length}\n              )\n            </h2>\n\n            <form onSubmit={this.handlePagePathSearch}>\n              <label>\n                Search:\n                <input\n                  type=\"text\"\n                  id=\"search\"\n                  placeholder=\"Search pages...\"\n                  value={this.state.pagePathSearchTerms}\n                  onChange={this.handleSearchTermChange}\n                />\n              </label>\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n            <ul>\n              {this.state.pagePaths.map(\n                (pagePath, index) =>\n                  index < 100 && (\n                    <li key={pagePath}>\n                      <Link to={pagePath}>{pagePath}</Link>\n                    </li>\n                  )\n              )}\n              {this.state.pagePaths.length > 100 && (\n                <p style={{ fontWeight: `bold` }}>\n                  ... and {this.state.pagePaths.length - 100} more.\n                </p>\n              )}\n            </ul>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Dev404Page\n\n// ESLint is complaining about the backslash in regex\n/* eslint-disable */\nexport const pagesQuery = graphql`\n  query PagesQuery {\n    allSiteFunction {\n      nodes {\n        functionRoute\n      }\n    }\n    allSitePage(filter: { path: { regex: \"/^(?!\\/dev-404-page).+$/\" } }) {\n      nodes {\n        path\n      }\n    }\n  }\n`\n/* eslint-enable */\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${encode(object.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n"],"names":["React","PropTypes","Link","navigate","queryString","Dev404Page","props","data","location","pagePaths","allSitePage","nodes","map","node","path","urlState","parse","search","initialPagePathSearchTerms","filter","state","hasMounted","showCustom404","process","env","GATSBY_DISABLE_CUSTOM_404","initPagePaths","pagePathSearchTerms","getFilteredPagePaths","bind","handlePagePathSearch","handleSearchTermChange","setState","event","searchValue","target","value","setSearchUrl","preventDefault","allPagePaths","searchTerm","RegExp","pagePath","test","pathname","searchMap","newSearch","stringify","replace","newFilePath","newAPIPath","slice","custom404","border","padding","maxWidth","background","__html","length","allSiteFunction","functionRoute","index","fontWeight","Component","object","element","pagesQuery"],"sourceRoot":""}